{"ast":null,"code":"var _jsxFileName = \"/home/anton/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/sea_battle/src/screens/InitScreen.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Field } from '../components/Field';\nimport { Cell } from '../components/Cell';\nconst Row = styled.div`\ndisplay: flex;\n`;\n/*const useMouse = (event : any) => {\n    const [state, setState] = useState({x: 0, y: 0})\n  \n    const mouseOver = (e : any) => {\n      setState(state => ({...state, x: e.clientX, y: e.clientY}))\n    }\n    return {\n      x: state.x,\n      y: state.y,\n      mouseOver,\n    }\n  }*/\n\n/*function handler(event) {\n   function str(el) {\n    if (!el) return \"null\"\n    return el.className || el.tagName;\n  }\n\n  log.value += event.type + ':  ' +\n    'target=' + str(event.target) +\n    ',  relatedTarget=' + str(event.relatedTarget) + \"\\n\";\n  log.scrollTop = log.scrollHeight;\n\n  if (event.type == 'mouseover') {\n    event.target.style.background = 'pink'\n  }\n}*/\n\nexport const InitScreen = ({\n  field\n}) => {\n  //const {x, y, mouseMove} = useMouse()\n  const {\n    cells\n  } = field;\n  return /*#__PURE__*/React.createElement(Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, cells.map((row, i) => /*#__PURE__*/React.createElement(Row, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, row.map((col, j) => /*#__PURE__*/React.createElement(Cell, {\n    key: `${i}-${j}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, (col, i))))));\n};","map":{"version":3,"sources":["/home/anton/Рабочий стол/projects/sea_battle/src/screens/InitScreen.tsx"],"names":["React","styled","Field","Cell","Row","div","InitScreen","field","cells","map","row","i","col","j"],"mappings":";AAAA,OAAOA,KAAP,MAAoC,OAApC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,IAAT,QAAqB,oBAArB;AAGA,MAAMC,GAAG,GAAGH,MAAM,CAACI,GAAI;;CAAvB;AAGA;;;;;;;;;;;;;AAcE;;;;;;;;;;;;;;;;AAqBF,OAAO,MAAMC,UAAgC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC3D;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB;AAGA,sBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,KAAK,CAACC,GAAN,CAAU,CAACC,GAAD,EAAMC,CAAN,kBACP,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,GAAG,CAACD,GAAJ,CAAQ,CAACG,GAAD,EAAMC,CAAN,kBACL,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAG,GAAEF,CAAE,IAAGE,CAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAyBD,GAAG,EAAED,CAA9B,EADH,CADL,CADH,CADL,CADJ;AAWH,CAhBM","sourcesContent":["import React, { FC, useState } from 'react'\n\nimport styled from 'styled-components'\n\nimport { Field } from '../components/Field'\nimport { Cell } from '../components/Cell'\nimport { IField } from '../entities/field'\n\nconst Row = styled.div`\ndisplay: flex;\n`\n/*const useMouse = (event : any) => {\n    const [state, setState] = useState({x: 0, y: 0})\n  \n    const mouseOver = (e : any) => {\n      setState(state => ({...state, x: e.clientX, y: e.clientY}))\n    }\n    return {\n      x: state.x,\n      y: state.y,\n      mouseOver,\n    }\n  }*/\n\n\n  /*function handler(event) {\n\n    function str(el) {\n      if (!el) return \"null\"\n      return el.className || el.tagName;\n    }\n  \n    log.value += event.type + ':  ' +\n      'target=' + str(event.target) +\n      ',  relatedTarget=' + str(event.relatedTarget) + \"\\n\";\n    log.scrollTop = log.scrollHeight;\n  \n    if (event.type == 'mouseover') {\n      event.target.style.background = 'pink'\n    }\n  }*/\n\nexport interface IInitScreenProps {\n    field: IField\n}\n\nexport const InitScreen: FC<IInitScreenProps> = ({ field }) => {\n    //const {x, y, mouseMove} = useMouse()\n    const { cells } = field\n\n\n    return (\n        <Field>\n            {cells.map((row, i) => (\n                <Row key={i}>\n                    {row.map((col, j) => (\n                        <Cell key={`${i}-${j}`}>{col, i}</Cell>        \n                     ))}\n                </Row>\n            ))}\n        </Field>\n    );\n};"]},"metadata":{},"sourceType":"module"}