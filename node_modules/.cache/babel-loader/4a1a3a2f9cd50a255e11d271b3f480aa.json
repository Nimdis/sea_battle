{"ast":null,"code":"var _jsxFileName = \"/home/anton/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/sea_battle/src/components/Cell.tsx\";\nimport React from 'react';\nimport { ECellType } from '../entities/CellsStore';\n\nconst getSym = type => {\n  switch (type) {\n    case ECellType.empty:\n      return 'O';\n\n    case ECellType.withShip:\n      return 'X';\n\n    case ECellType.missed:\n      return 'Y';\n\n    case ECellType.hitted:\n      return 'Z';\n\n    default:\n      return 'O';\n  }\n};\n\nexport const Cell = ({\n  type,\n  onMouseOver,\n  onClick,\n  onMouseLeave\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onMouseLeave: onMouseLeave,\n    onClick: onClick,\n    onMouseOver: onMouseOver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }\n  }, getSym(type));\n};","map":{"version":3,"sources":["/home/anton/Рабочий стол/projects/sea_battle/src/components/Cell.tsx"],"names":["React","ECellType","getSym","type","empty","withShip","missed","hitted","Cell","onMouseOver","onClick","onMouseLeave"],"mappings":";AAAA,OAAOA,KAAP,MAAsC,OAAtC;AAEA,SAASC,SAAT,QAA0B,wBAA1B;;AASA,MAAMC,MAAM,GAAIC,IAAD,IAAqB;AAChC,UAAOA,IAAP;AACI,SAAKF,SAAS,CAACG,KAAf;AACI,aAAO,GAAP;;AACJ,SAAKH,SAAS,CAACI,QAAf;AACI,aAAO,GAAP;;AACJ,SAAKJ,SAAS,CAACK,MAAf;AACI,aAAO,GAAP;;AACJ,SAAKL,SAAS,CAACM,MAAf;AACI,aAAO,GAAP;;AACJ;AACI,aAAO,GAAP;AAVR;AAYH,CAbD;;AAeA,OAAO,MAAMC,IAAoB,GAAG,CAAC;AAAEL,EAAAA,IAAF;AAAQM,EAAAA,WAAR;AAAqBC,EAAAA,OAArB;AAA8BC,EAAAA;AAA9B,CAAD,KAAkD;AAClF,sBAAO;AAAK,IAAA,YAAY,EAAEA,YAAnB;AAAiC,IAAA,OAAO,EAAED,OAA1C;AAAmD,IAAA,WAAW,EAAED,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8EP,MAAM,CAACC,IAAD,CAApF,CAAP;AACH,CAFM","sourcesContent":["import React, { FC, MouseEvent } from 'react'\n\nimport { ECellType } from '../entities/CellsStore'\n\nexport interface ICellProps {\n    type: ECellType;\n    onMouseOver: (e: MouseEvent<HTMLDivElement>) => void;\n    onClick: (e: MouseEvent<HTMLDivElement>) => void;\n    onMouseLeave: (e: MouseEvent<HTMLDivElement>) => void;\n}\n\nconst getSym = (type: ECellType) => {\n    switch(type){\n        case ECellType.empty:\n            return 'O'\n        case ECellType.withShip:\n            return 'X'\n        case ECellType.missed:\n            return 'Y'\n        case ECellType.hitted:\n            return 'Z'\n        default:\n            return 'O'\n    }\n}\n\nexport const Cell: FC<ICellProps> = ({ type, onMouseOver, onClick, onMouseLeave }) => {\n    return <div onMouseLeave={onMouseLeave} onClick={onClick} onMouseOver={onMouseOver}>{getSym(type)}</div>\n};\n\n\n  \n\n"]},"metadata":{},"sourceType":"module"}