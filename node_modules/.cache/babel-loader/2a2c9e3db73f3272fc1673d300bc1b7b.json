{"ast":null,"code":"var _jsxFileName = \"/home/anton/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/sea_battle/src/Game.tsx\";\nimport React, { useState } from 'react';\nimport { InitScreen } from './screens/InitScreen';\nimport { ECellType } from './entities/field';\nconst field = {\n  cells: [[ECellType.empty, ECellType.empty, ECellType.empty, ECellType.empty], [ECellType.empty, ECellType.empty, ECellType.empty, ECellType.empty], [ECellType.empty, ECellType.empty, ECellType.empty, ECellType.empty], [ECellType.empty, ECellType.empty, ECellType.empty, ECellType.empty]]\n}; // useState Field + заполнение\n// размещение кораблей\n// проставление после клика в стейт\n\nexport const Game = () => {\n  const [gamePhase, setGamePhase] = useState('initialization');\n  const [playerTurn, setPlayerTurn] = useState('first');\n\n  switch (gamePhase) {\n    case 'initialization':\n      return /*#__PURE__*/React.createElement(InitScreen, {\n        field: field,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }\n      });\n\n    case 'game':\n    case 'finished':\n    default:\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 20\n        }\n      }, \"Error\");\n  }\n};","map":{"version":3,"sources":["/home/anton/Рабочий стол/projects/sea_battle/src/Game.tsx"],"names":["React","useState","InitScreen","ECellType","field","cells","empty","Game","gamePhase","setGamePhase","playerTurn","setPlayerTurn"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,SAASC,SAAT,QAAkC,kBAAlC;AAEA,MAAMC,KAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE,CAAC,CACJF,SAAS,CAACG,KADN,EAEJH,SAAS,CAACG,KAFN,EAGJH,SAAS,CAACG,KAHN,EAIJH,SAAS,CAACG,KAJN,CAAD,EAKJ,CACCH,SAAS,CAACG,KADX,EAECH,SAAS,CAACG,KAFX,EAGCH,SAAS,CAACG,KAHX,EAICH,SAAS,CAACG,KAJX,CALI,EAUJ,CACCH,SAAS,CAACG,KADX,EAECH,SAAS,CAACG,KAFX,EAGCH,SAAS,CAACG,KAHX,EAICH,SAAS,CAACG,KAJX,CAVI,EAeJ,CACCH,SAAS,CAACG,KADX,EAECH,SAAS,CAACG,KAFX,EAGCH,SAAS,CAACG,KAHX,EAICH,SAAS,CAACG,KAJX,CAfI;AADW,CAAtB,C,CAwBA;AACA;AACA;;AAEA,OAAO,MAAMC,IAAQ,GAAG,MAAM;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAa,gBAAb,CAA1C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAc,OAAd,CAA5C;;AAEA,UAAQO,SAAR;AACI,SAAK,gBAAL;AACI,0BAAO,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAEJ,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAK,MAAL;AACA,SAAK,UAAL;AACA;AACI,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AANR;AAQH,CAZM","sourcesContent":["import React, { FC, useState } from 'react'\n\nimport { InitScreen } from './screens/InitScreen'\nimport { TGamePhase, TPlayerTurn } from './types'\nimport { ECellType, IField } from './entities/field'\n\nconst field: IField = {\n    cells: [[\n        ECellType.empty,\n        ECellType.empty,\n        ECellType.empty,\n        ECellType.empty\n    ], [\n        ECellType.empty,\n        ECellType.empty,\n        ECellType.empty,\n        ECellType.empty\n    ], [\n        ECellType.empty,\n        ECellType.empty,\n        ECellType.empty,\n        ECellType.empty\n    ], [\n        ECellType.empty,\n        ECellType.empty,\n        ECellType.empty,\n        ECellType.empty\n    ]]\n}\n\n// useState Field + заполнение\n// размещение кораблей\n// проставление после клика в стейт\n\nexport const Game: FC = () => {\n    const [gamePhase, setGamePhase] = useState<TGamePhase>('initialization')\n    const [playerTurn, setPlayerTurn] = useState<TPlayerTurn>('first')\n\n    switch (gamePhase) {\n        case 'initialization':\n            return <InitScreen field={field} />;\n        case 'game':\n        case 'finished':\n        default:\n            return <div>Error</div>\n    }\n};"]},"metadata":{},"sourceType":"module"}