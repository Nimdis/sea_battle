{"ast":null,"code":"var _jsxFileName = \"/home/anton/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/sea_battle/src/Game.tsx\";\nimport React, { useState } from 'react';\nimport { InitScreen } from './screens/InitScreen';\nimport { ECellType } from './entities/field'; // useState Field + заполнение\n// размещение кораблей\n// проставление после клика в стейт\n\nexport const Game = () => {\n  const [gamePhase, setGamePhase] = useState('initialization');\n  const [playerTurn, setPlayerTurn] = useState('first');\n  const [field, setField] = useState(() => {\n    let a = {\n      cells: []\n    };\n\n    for (let y = 0; y < 10; y++) {\n      a.cells.push([]);\n\n      for (let x = 0; x < 10; x++) {\n        a.cells[y].push(ECellType.empty);\n      }\n    }\n\n    return a;\n  });\n\n  switch (gamePhase) {\n    case 'initialization':\n      return /*#__PURE__*/React.createElement(InitScreen, {\n        field: field,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 20\n        }\n      });\n\n    case 'game':\n    case 'finished':\n    default:\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 20\n        }\n      }, \"Error\");\n  }\n};","map":{"version":3,"sources":["/home/anton/Рабочий стол/projects/sea_battle/src/Game.tsx"],"names":["React","useState","InitScreen","ECellType","Game","gamePhase","setGamePhase","playerTurn","setPlayerTurn","field","setField","a","cells","y","push","x","empty"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,SAASC,SAAT,QAAkC,kBAAlC,C,CAEA;AACA;AACA;;AAIA,OAAO,MAAMC,IAAQ,GAAG,MAAM;AAC1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAa,gBAAb,CAA1C;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAc,OAAd,CAA5C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAS,MAAM;AAC7C,QAAIU,CAAU,GAAG;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAjB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA2B;AACvBF,MAAAA,CAAC,CAACC,KAAF,CAAQE,IAAR,CAAa,EAAb;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA2B;AACvBJ,QAAAA,CAAC,CAACC,KAAF,CAAQC,CAAR,EAAWC,IAAX,CAAgBX,SAAS,CAACa,KAA1B;AACH;AACJ;;AACD,WAAOL,CAAP;AACH,GATiC,CAAlC;;AAUA,UAAQN,SAAR;AACI,SAAK,gBAAL;AACI,0BAAO,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAEI,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAK,MAAL;AACA,SAAK,UAAL;AACA;AACI,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AANR;AAQH,CArBM","sourcesContent":["import React, { FC, useState } from 'react'\nimport { InitScreen } from './screens/InitScreen'\nimport { TGamePhase, TPlayerTurn } from './types'\nimport { ECellType, IField } from './entities/field'\n\n// useState Field + заполнение\n// размещение кораблей\n// проставление после клика в стейт\n\n\n\nexport const Game: FC = () => {\n    const [gamePhase, setGamePhase] = useState<TGamePhase>('initialization')\n    const [playerTurn, setPlayerTurn] = useState<TPlayerTurn>('first')\n    const [field, setField] = useState<IField>(() => {\n        let a : IField = { cells: [] }\n        for(let y = 0; y < 10; y++){\n            a.cells.push([])\n            for(let x = 0; x < 10; x++){\n                a.cells[y].push(ECellType.empty)\n            }\n        }\n        return a\n    })\n    switch (gamePhase) {\n        case 'initialization':\n            return <InitScreen field={field} />\n        case 'game':\n        case 'finished':\n        default:\n            return <div>Error</div>\n    }\n};"]},"metadata":{},"sourceType":"module"}