{"ast":null,"code":"var _jsxFileName = \"/home/anton/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/sea_battle/src/screens/InitScreen.tsx\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Field } from '../components/Field';\nimport { Cell } from '../components/Cell';\nimport { ECellType } from '../entities/field';\nimport { cloneDeepWith, cloneDeep } from \"lodash\";\nconst Row = styled.div`\ndisplay: flex;\n`;\nvar EShip;\n\n(function (EShip) {\n  EShip[EShip[\"one\"] = 0] = \"one\";\n  EShip[EShip[\"two\"] = 1] = \"two\";\n  EShip[EShip[\"three\"] = 2] = \"three\";\n  EShip[EShip[\"four\"] = 3] = \"four\";\n})(EShip || (EShip = {}));\n\nconst MAX_COUNT_BY_SHIP_TYPE = {\n  [EShip.four]: 1,\n  [EShip.three]: 2,\n  [EShip.two]: 3,\n  [EShip.one]: 4\n};\nexport const InitScreen = ({\n  field,\n  onFieldChange\n}) => {\n  console.log(\"rerender\");\n  const [cells, setCells] = useState(field.cells);\n  const [shipsState, setShipsState] = useState();\n  const [currentShip, setCurrentShip] = useState({\n    position: undefined,\n    type: EShip.one\n  });\n  const [prevPostion, setPrevPosition] = useState();\n  const handleMouseOver = useCallback((i, j) => () => {\n    console.log(currentShip.type);\n    setCells(cloneDeepWith(field, value => {\n      const a = cloneDeep(value);\n\n      for (let x = -(currentShip.type + 1) / 2; x < (currentShip.type + 1) / 2; x++) {\n        if (x + j > 9) {\n          a.cells[i][9 - x - 2] = ECellType.withShip;\n        } else if (x + j < 0) {\n          a.cells[i][Math.abs(x) + 1] = ECellType.withShip;\n        } else {\n          console.log(j, x);\n          a.cells[i][j + x] = ECellType.withShip;\n        }\n      }\n\n      return a.cells;\n    })); // TODO\n    // change field with onFieldChange\n  }, [cells]);\n  const handleOnClick = useCallback((i, j) => () => {\n    onFieldChange(cloneDeep({\n      cells: cells\n    }));\n  }, [field]);\n  useEffect(() => {\n    document.addEventListener('keypress', e => {\n      if (e.keyCode === 32) {\n        console.log('here');\n      }\n    });\n  }, []); // TODO\n  // space pressed\n  // click\n\n  return /*#__PURE__*/React.createElement(Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, cells.map((row, i) => /*#__PURE__*/React.createElement(Row, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, row.map((type, j) => /*#__PURE__*/React.createElement(Cell, {\n    type: type,\n    key: `${i}-${j}`,\n    onMouseOver: handleMouseOver(i, j),\n    onClick: handleOnClick(i, j),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  })))));\n};","map":{"version":3,"sources":["/home/anton/Рабочий стол/projects/sea_battle/src/screens/InitScreen.tsx"],"names":["React","useState","useCallback","useEffect","styled","Field","Cell","ECellType","cloneDeepWith","cloneDeep","Row","div","EShip","MAX_COUNT_BY_SHIP_TYPE","four","three","two","one","InitScreen","field","onFieldChange","console","log","cells","setCells","shipsState","setShipsState","currentShip","setCurrentShip","position","undefined","type","prevPostion","setPrevPosition","handleMouseOver","i","j","value","a","x","withShip","Math","abs","handleOnClick","document","addEventListener","e","keyCode","map","row"],"mappings":"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","sourcesContent":["import React, { FC, useState, useCallback, useEffect } from 'react'\n\nimport styled from 'styled-components'\n\nimport { Field } from '../components/Field'\nimport { Cell } from '../components/Cell'\nimport { IField, ECellType } from '../entities/field'\nimport { cloneDeepWith, cloneDeep } from \"lodash\"\nimport { Console } from 'console'\n\nconst Row = styled.div`\ndisplay: flex;\n`\n\ntype TPosition = {\n    i: number\n    j: number\n}\n\nexport interface IInitScreenProps {\n    field: IField\n    onFieldChange: (field: IField) => void\n}\n\nenum EShip {\n    one,\n    two,\n    three,\n    four\n}\n\ntype IShipsState = Record<EShip, {\n    count: number\n    placedShips: TPosition[]\n}>\n\ninterface ICurrentShip {\n    position?: TPosition\n    type: EShip\n}\n\nconst MAX_COUNT_BY_SHIP_TYPE = {\n  [EShip.four]: 1,\n  [EShip.three]: 2,\n  [EShip.two]: 3,\n  [EShip.one]: 4,\n}\n\nexport const InitScreen: FC<IInitScreenProps> = ({ field, onFieldChange }) => {\n    console.log(\"rerender\")\n    const [cells, setCells] = useState<ECellType[][]>(field.cells)\n    const [shipsState, setShipsState] = useState<IShipsState>();\n    const [currentShip, setCurrentShip] = useState<ICurrentShip>({\n      position: undefined,\n      type: EShip.one\n    });\n\n    const [prevPostion, setPrevPosition] = useState<TPosition>()\n\n    const handleMouseOver = useCallback((i: number, j: number) => () => {\n        console.log(currentShip.type)\n        setCells(cloneDeepWith(field, (value : IField) => {\n            const a : IField = cloneDeep(value)  \n            for(let x = -(currentShip.type+1)/2; x < (currentShip.type+1)/2; x++){\n                if(x + j > 9){\n                    a.cells[i][9-x-2] = ECellType.withShip;\n                }else if(x + j < 0){\n                    a.cells[i][Math.abs(x)+1] = ECellType.withShip;\n                }else{\n                    console.log(j,x)\n                    a.cells[i][j+x] = ECellType.withShip;\n                }\n            }\n            return a.cells\n        }))\n        \n      // TODO\n      // change field with onFieldChange\n    }, [cells])\n\n    const handleOnClick = useCallback((i: number, j: number) => () => {\n        onFieldChange(cloneDeep({cells: cells}))\n    }, [field])\n\n    useEffect(() => {\n      document.addEventListener('keypress', e => {\n          if (e.keyCode === 32) {\n              console.log('here')\n          }\n      })\n    }, [])\n\n    // TODO\n    // space pressed\n    // click\n\n\n    return (\n        <Field>\n            {cells.map((row, i) => (\n                <Row key={i}>\n                    {row.map((type, j) => (\n                        <Cell\n                          type={type}\n                          key={`${i}-${j}`}\n                          onMouseOver={handleMouseOver(i, j)}\n                          onClick={handleOnClick(i, j)}\n                          />\n                     ))}\n                </Row>\n            ))}\n        </Field>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}