{"ast":null,"code":"var _jsxFileName = \"/home/anton/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/sea_battle/src/Game.tsx\";\nimport React, { useState } from 'react';\nimport { InitScreen } from './screens/InitScreen';\nimport { ECellType } from './entities/field'; // useState Field + заполнение\n// размещение кораблей\n// проставление после клика в стейт\n\nconst useMouse = () => {\n  const [state, setState] = useState({\n    x: 0,\n    y: 0\n  });\n\n  const mouseMove = e => {\n    setState(state => ({ ...state,\n      x: e.clientX,\n      y: e.clientY\n    }));\n  };\n\n  return {\n    x: state.x,\n    y: state.y,\n    mouseMove\n  };\n};\n\nexport const Game = () => {\n  const {\n    x,\n    y,\n    mouseMove\n  } = useMouse();\n  const [field, setField] = useState(() => {\n    let a = {\n      cells: []\n    };\n\n    for (let y = 0; y < 10; y++) {\n      a.cells.push([]);\n\n      for (let x = 0; x < 10; x++) {\n        a.cells[y].push(ECellType.empty);\n      }\n    }\n\n    return a;\n  });\n  window.onmousemove = mouseMove;\n  field.cells[0][0] = ECellType.withShip;\n  const [gamePhase, setGamePhase] = useState('initialization');\n  const [playerTurn, setPlayerTurn] = useState('first');\n\n  switch (gamePhase) {\n    case 'initialization':\n      return /*#__PURE__*/React.createElement(InitScreen, {\n        field: field,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 20\n        }\n      });\n\n    case 'game':\n    case 'finished':\n    default:\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 20\n        }\n      }, \"Error\");\n  }\n};","map":{"version":3,"sources":["/home/anton/Рабочий стол/projects/sea_battle/src/Game.tsx"],"names":["React","useState","InitScreen","ECellType","useMouse","state","setState","x","y","mouseMove","e","clientX","clientY","Game","field","setField","a","cells","push","empty","window","onmousemove","withShip","gamePhase","setGamePhase","playerTurn","setPlayerTurn"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,SAASC,SAAT,QAAkC,kBAAlC,C,CAEA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AAACM,IAAAA,CAAC,EAAE,CAAJ;AAAOC,IAAAA,CAAC,EAAE;AAAV,GAAD,CAAlC;;AAEA,QAAMC,SAAS,GAAIC,CAAD,IAAa;AAC7BJ,IAAAA,QAAQ,CAACD,KAAK,KAAK,EAAC,GAAGA,KAAJ;AAAWE,MAAAA,CAAC,EAAEG,CAAC,CAACC,OAAhB;AAAyBH,MAAAA,CAAC,EAAEE,CAAC,CAACE;AAA9B,KAAL,CAAN,CAAR;AACD,GAFD;;AAGA,SAAO;AACLL,IAAAA,CAAC,EAAEF,KAAK,CAACE,CADJ;AAELC,IAAAA,CAAC,EAAEH,KAAK,CAACG,CAFJ;AAGLC,IAAAA;AAHK,GAAP;AAKD,CAXH;;AAaA,OAAO,MAAMI,IAAQ,GAAG,MAAM;AAC1B,QAAM;AAACN,IAAAA,CAAD;AAAIC,IAAAA,CAAJ;AAAOC,IAAAA;AAAP,MAAoBL,QAAQ,EAAlC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAS,MAAM;AAC7C,QAAIe,CAAU,GAAG;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAjB;;AACA,SAAI,IAAIT,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA2B;AACvBQ,MAAAA,CAAC,CAACC,KAAF,CAAQC,IAAR,CAAa,EAAb;;AACA,WAAI,IAAIX,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA2B;AACvBS,QAAAA,CAAC,CAACC,KAAF,CAAQT,CAAR,EAAWU,IAAX,CAAgBf,SAAS,CAACgB,KAA1B;AACH;AACJ;;AACD,WAAOH,CAAP;AACH,GATiC,CAAlC;AAWAI,EAAAA,MAAM,CAACC,WAAP,GAAqBZ,SAArB;AACAK,EAAAA,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAe,CAAf,IAAoBd,SAAS,CAACmB,QAA9B;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAAa,gBAAb,CAA1C;AACA,QAAM,CAACwB,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAc,OAAd,CAA5C;;AAEA,UAAQsB,SAAR;AACI,SAAK,gBAAL;AACI,0BAAO,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAET,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACJ,SAAK,MAAL;AACA,SAAK,UAAL;AACA;AACI,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AANR;AAQH,CA3BM","sourcesContent":["import React, { FC, useState } from 'react'\n\nimport { InitScreen } from './screens/InitScreen'\nimport { TGamePhase, TPlayerTurn } from './types'\nimport { ECellType, IField } from './entities/field'\n\n// useState Field + заполнение\n// размещение кораблей\n// проставление после клика в стейт\n\nconst useMouse = () => {\n    const [state, setState] = useState({x: 0, y: 0})\n  \n    const mouseMove = (e : any) => {\n      setState(state => ({...state, x: e.clientX, y: e.clientY}))\n    }\n    return {\n      x: state.x,\n      y: state.y,\n      mouseMove,\n    }\n  }\n\nexport const Game: FC = () => {\n    const {x, y, mouseMove} = useMouse()\n    const [field, setField] = useState<IField>(() => {\n        let a : IField = { cells: [] }\n        for(let y = 0; y < 10; y++){\n            a.cells.push([])\n            for(let x = 0; x < 10; x++){\n                a.cells[y].push(ECellType.empty)\n            }\n        }\n        return a\n    })\n\n    window.onmousemove = mouseMove\n    field.cells[0][0] = ECellType.withShip;\n\n    const [gamePhase, setGamePhase] = useState<TGamePhase>('initialization')\n    const [playerTurn, setPlayerTurn] = useState<TPlayerTurn>('first')\n\n    switch (gamePhase) {\n        case 'initialization':\n            return <InitScreen field={field} />;\n        case 'game':\n        case 'finished':\n        default:\n            return <div>Error</div>\n    }\n};"]},"metadata":{},"sourceType":"module"}