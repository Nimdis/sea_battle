{"ast":null,"code":"var _jsxFileName = \"/home/anton/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/sea_battle/src/screens/InitScreen.tsx\";\nimport React, { useMemo, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useObserver } from 'mobx-react-lite';\nimport { Field } from '../components/Field';\nimport { Cell } from '../components/Cell';\nimport { InitScreenStore } from '../entities/initScreen';\nimport { field } from '../entities/field';\nconst Row = styled.div`\ndisplay: flex;\n`;\nexport const InitScreen = () => {\n  console.log(\"rerender\");\n  const initScreen = useMemo(() => new InitScreenStore(field.cloneCells()), []);\n  const handleMouseOver = useCallback((i, j) => () => {\n    initScreen.handleMouseOver(i, j);\n  }, [initScreen]);\n  const handleClick = useCallback((i, j) => () => {\n    initScreen.handleClick(i, j);\n  }, [initScreen]);\n  const handleMouseLeave = useCallback(() => () => {\n    initScreen.handleMouseLeave();\n  }, [initScreen]);\n  useEffect(() => {\n    const listener = e => {\n      if (e.keyCode === 32) {\n        initScreen.handleRotate();\n      }\n    }; //document.removeEventListener('keypress', listener)\n\n\n    document.addEventListener('keypress', listener);\n    return () => {\n      document.removeEventListener('keypress', listener);\n    };\n  }, [initScreen]); // TODO\n  // space pressed\n  // click\n\n  return useObserver(() => /*#__PURE__*/React.createElement(Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, initScreen.getCells().map((row, i) => /*#__PURE__*/React.createElement(Row, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, row.map((type, j) => /*#__PURE__*/React.createElement(Cell, {\n    type: type,\n    key: `${i}-${j}`,\n    onMouseOver: handleMouseOver(i, j),\n    onClick: handleClick(i, j),\n    onMouseLeave: handleMouseLeave(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }))))));\n};","map":{"version":3,"sources":["/home/anton/Рабочий стол/projects/sea_battle/src/screens/InitScreen.tsx"],"names":["React","useMemo","useCallback","useEffect","styled","useObserver","Field","Cell","InitScreenStore","field","Row","div","InitScreen","console","log","initScreen","cloneCells","handleMouseOver","i","j","handleClick","handleMouseLeave","listener","e","keyCode","handleRotate","document","addEventListener","removeEventListener","getCells","map","row","type"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,OAApB,EAA6BC,WAA7B,EAA0CC,SAA1C,QAA2D,OAA3D;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,MAAMC,GAAG,GAAGN,MAAM,CAACO,GAAI;;CAAvB;AAIA,OAAO,MAAMC,UAAc,GAAG,MAAM;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEA,QAAMC,UAAU,GAAGd,OAAO,CAAC,MAAM,IAAIO,eAAJ,CAAoBC,KAAK,CAACO,UAAN,EAApB,CAAP,EAAgD,EAAhD,CAA1B;AAEA,QAAMC,eAAe,GAAGf,WAAW,CAAC,CAACgB,CAAD,EAAYC,CAAZ,KAA0B,MAAM;AAChEJ,IAAAA,UAAU,CAACE,eAAX,CAA2BC,CAA3B,EAA8BC,CAA9B;AACH,GAFkC,EAEhC,CAACJ,UAAD,CAFgC,CAAnC;AAIA,QAAMK,WAAW,GAAGlB,WAAW,CAAC,CAACgB,CAAD,EAAYC,CAAZ,KAA0B,MAAM;AAC5DJ,IAAAA,UAAU,CAACK,WAAX,CAAuBF,CAAvB,EAA0BC,CAA1B;AACH,GAF8B,EAE5B,CAACJ,UAAD,CAF4B,CAA/B;AAIA,QAAMM,gBAAgB,GAAGnB,WAAW,CAAC,MAAM,MAAM;AAC7Ca,IAAAA,UAAU,CAACM,gBAAX;AACH,GAFmC,EAEjC,CAACN,UAAD,CAFiC,CAApC;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMmB,QAAQ,GAAIC,CAAD,IAAY;AACzB,UAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AAClBT,QAAAA,UAAU,CAACU,YAAX;AACH;AACJ,KAJD,CADY,CAMZ;;;AACAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,EAAsCL,QAAtC;AACA,WAAO,MAAM;AACTI,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,UAA7B,EAAyCN,QAAzC;AACH,KAFD;AAGH,GAXQ,EAWN,CAACP,UAAD,CAXM,CAAT,CAjBgC,CA8BhC;AACA;AACA;;AAEA,SAAOV,WAAW,CAAC,mBACf,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKU,UAAU,CAACc,QAAX,GAAsBC,GAAtB,CAA0B,CAACC,GAAD,EAAMb,CAAN,kBACvB,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKa,GAAG,CAACD,GAAJ,CAAQ,CAACE,IAAD,EAAOb,CAAP,kBACL,oBAAC,IAAD;AACI,IAAA,IAAI,EAAEa,IADV;AAEI,IAAA,GAAG,EAAG,GAAEd,CAAE,IAAGC,CAAE,EAFnB;AAGI,IAAA,WAAW,EAAEF,eAAe,CAACC,CAAD,EAAIC,CAAJ,CAHhC;AAII,IAAA,OAAO,EAAEC,WAAW,CAACF,CAAD,EAAIC,CAAJ,CAJxB;AAKI,IAAA,YAAY,EAAEE,gBAAgB,EALlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADH,CADL,CADc,CAAlB;AAiBH,CAnDM","sourcesContent":["import React, { FC, useMemo, useCallback, useEffect } from 'react'\n\nimport styled from 'styled-components'\nimport { useObserver } from 'mobx-react-lite'\n\nimport { Field } from '../components/Field'\nimport { Cell } from '../components/Cell'\nimport { InitScreenStore } from '../entities/initScreen'\nimport { field } from '../entities/field'\n\nconst Row = styled.div`\ndisplay: flex;\n`\n\nexport const InitScreen: FC = () => {\n    console.log(\"rerender\")\n\n    const initScreen = useMemo(() => new InitScreenStore(field.cloneCells()), [])\n\n    const handleMouseOver = useCallback((i: number, j: number) => () => {\n        initScreen.handleMouseOver(i, j)\n    }, [initScreen])\n\n    const handleClick = useCallback((i: number, j: number) => () => {\n        initScreen.handleClick(i, j)\n    }, [initScreen])\n\n    const handleMouseLeave = useCallback(() => () => {\n        initScreen.handleMouseLeave()\n    }, [initScreen])\n\n    useEffect(() => {\n        const listener = (e: any) => {\n            if (e.keyCode === 32) {\n                initScreen.handleRotate()\n            }\n        }\n        //document.removeEventListener('keypress', listener)\n        document.addEventListener('keypress', listener)\n        return () => {\n            document.removeEventListener('keypress', listener)\n        };\n    }, [initScreen])\n\n    // TODO\n    // space pressed\n    // click\n\n    return useObserver(() => (\n        <Field>\n            {initScreen.getCells().map((row, i) => (\n                <Row key={i}>\n                    {row.map((type, j) => (\n                        <Cell\n                            type={type}\n                            key={`${i}-${j}`}\n                            onMouseOver={handleMouseOver(i, j)}\n                            onClick={handleClick(i, j)}\n                            onMouseLeave={handleMouseLeave()}\n                        />\n                    ))}\n                </Row>\n            ))}\n        </Field>\n    ));\n};\n"]},"metadata":{},"sourceType":"module"}