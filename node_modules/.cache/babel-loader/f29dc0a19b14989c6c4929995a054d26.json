{"ast":null,"code":"import _initializerDefineProperty from \"/home/anton/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/sea_battle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/home/anton/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/sea_battle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/home/anton/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/sea_battle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _temp;\n\nimport { observable, action } from 'mobx';\nexport let ECellType;\n\n(function (ECellType) {\n  ECellType[ECellType[\"empty\"] = 0] = \"empty\";\n  ECellType[ECellType[\"withShip\"] = 1] = \"withShip\";\n  ECellType[ECellType[\"missed\"] = 2] = \"missed\";\n  ECellType[ECellType[\"hitted\"] = 3] = \"hitted\";\n})(ECellType || (ECellType = {}));\n\nexport let CellsStore = (_class = (_temp = class CellsStore {\n  constructor(cells) {\n    _initializerDefineProperty(this, \"cells\", _descriptor, this);\n\n    this.cells = cells;\n  }\n\n  setCell(i, j, value) {\n    this.cells[i][j] = value;\n  }\n\n  getCell(i, j) {\n    return this.cells[i][j];\n  }\n\n  getCells() {\n    return this.cells;\n  }\n\n  setCells(cells) {\n    this.cells = cells;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"cells\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _applyDecoratedDescriptor(_class.prototype, \"setCell\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setCell\"), _class.prototype)), _class);","map":{"version":3,"sources":["/home/anton/Рабочий стол/projects/sea_battle/src/entities/CellsStore.ts"],"names":["observable","action","ECellType","CellsStore","constructor","cells","setCell","i","j","value","getCell","getCells","setCells"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,MAAnC;AAEA,WAAYC,SAAZ;;WAAYA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;GAAAA,S,KAAAA,S;;AASZ,WAAaC,UAAb,sBAAO,MAAMA,UAAN,CAAiB;AAGpBC,EAAAA,WAAW,CAACC,KAAD,EAAgB;AAAA;;AACvB,SAAKA,KAAL,GAAaA,KAAb;AACH;;AAGDC,EAAAA,OADA,CACQC,CADR,EACmBC,CADnB,EAC8BC,KAD9B,EACgD;AAC5C,SAAKJ,KAAL,CAAWE,CAAX,EAAcC,CAAd,IAAmBC,KAAnB;AACH;;AAEDC,EAAAA,OAAO,CAACH,CAAD,EAAYC,CAAZ,EAAuB;AAC1B,WAAO,KAAKH,KAAL,CAAWE,CAAX,EAAcC,CAAd,CAAP;AACH;;AAEDG,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKN,KAAZ;AACH;;AAEDO,EAAAA,QAAQ,CAACP,KAAD,EAAe;AACnB,SAAKA,KAAL,GAAaA,KAAb;AACH;;AAtBmB,CAAxB,+EACKL,UADL;AAAA;AAAA;AAAA;AAAA;AAAA,4DAOKC,MAPL","sourcesContent":["import { observable, action } from 'mobx';\n\nexport enum ECellType {\n    empty,\n    withShip,\n    missed,\n    hitted\n}\n\nexport type TCells = ECellType[][]\n\nexport class CellsStore {\n    @observable private cells: TCells;\n\n    constructor(cells: TCells) {\n        this.cells = cells;\n    }\n\n    @action\n    setCell(i: number, j: number, value: ECellType) {\n        this.cells[i][j] = value\n    }\n\n    getCell(i: number, j: number) {\n        return this.cells[i][j]\n    }\n\n    getCells() {\n        return this.cells;\n    }\n\n    setCells(cells: TCells){\n        this.cells = cells\n    }\n\n}"]},"metadata":{},"sourceType":"module"}