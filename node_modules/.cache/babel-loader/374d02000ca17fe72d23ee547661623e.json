{"ast":null,"code":"var _jsxFileName = \"/home/anton/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/sea_battle/src/screens/InitScreen.tsx\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Field } from '../components/Field';\nimport { Cell } from '../components/Cell';\nimport { EShip, EInitScreen } from '../entities/initScreen';\nconst Row = styled.div`\ndisplay: flex;\n`;\nconst MAX_COUNT_BY_SHIP_TYPE = {\n  [EShip.four]: 1,\n  [EShip.three]: 2,\n  [EShip.two]: 3,\n  [EShip.one]: 4\n};\nexport const InitScreen = ({\n  field\n}) => {\n  console.log(\"rerender\");\n  const [prevPostion, setPrevPosition] = useState();\n  const [initScreen] = useState(new EInitScreen(field));\n  const handleMouseOver = useCallback((i, j) => () => {\n    initScreen.setCurrentShipPosition(i, j);\n    initScreen.tempField = field.clone();\n    initScreen.addCurrentShip(); // TODO\n    // change field with onFieldChange\n  }, [initScreen]);\n  const handleClick = useCallback((i, j) => () => {\n    field.setCells(initScreen.tempField.clone().getCells());\n    initScreen.currentShip.num += 1;\n\n    if (initScreen.currentShip.num >= MAX_COUNT_BY_SHIP_TYPE[initScreen.currentShip.type]) {\n      initScreen.currentShip.type -= 1;\n      initScreen.currentShip.num = 0;\n    }\n  }, [field]);\n  useEffect(() => {\n    const listener = e => {\n      if (e.keyCode === 32) {\n        initScreen.inverseRotation();\n      }\n    }; //document.removeEventListener('keypress', listener)\n\n\n    document.addEventListener('keypress', listener);\n    return () => {\n      document.removeEventListener('keypress', listener);\n    };\n  }, [initScreen.currentShip]); // TODO\n  // space pressed\n  // click\n\n  return /*#__PURE__*/React.createElement(Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, initScreen.tempField.getCells().map((row, i) => /*#__PURE__*/React.createElement(Row, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, row.map((type, j) => /*#__PURE__*/React.createElement(Cell, {\n    type: type,\n    key: `${i}-${j}`,\n    onMouseOver: handleMouseOver(i, j),\n    onClick: handleClick(i, j),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  })))));\n};","map":{"version":3,"sources":["/home/anton/Рабочий стол/projects/sea_battle/src/screens/InitScreen.tsx"],"names":["React","useState","useCallback","useEffect","styled","Field","Cell","EShip","EInitScreen","Row","div","MAX_COUNT_BY_SHIP_TYPE","four","three","two","one","InitScreen","field","console","log","prevPostion","setPrevPosition","initScreen","handleMouseOver","i","j","setCurrentShipPosition","tempField","clone","addCurrentShip","handleClick","setCells","getCells","currentShip","num","type","listener","e","keyCode","inverseRotation","document","addEventListener","removeEventListener","map","row"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAA8BC,WAA9B,EAA2CC,SAA3C,QAA4D,OAA5D;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,IAAT,QAAqB,oBAArB;AAGA,SAASC,KAAT,EAA2BC,WAA3B,QAA8C,wBAA9C;AAEA,MAAMC,GAAG,GAAGL,MAAM,CAACM,GAAI;;CAAvB;AAgBA,MAAMC,sBAAsB,GAAG;AAC7B,GAACJ,KAAK,CAACK,IAAP,GAAc,CADe;AAE7B,GAACL,KAAK,CAACM,KAAP,GAAe,CAFc;AAG7B,GAACN,KAAK,CAACO,GAAP,GAAa,CAHgB;AAI7B,GAACP,KAAK,CAACQ,GAAP,GAAa;AAJgB,CAA/B;AAOA,OAAO,MAAMC,UAAgC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC3DC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAEA,QAAM,CAACC,WAAD,EAAcC,eAAd,IAAiCpB,QAAQ,EAA/C;AACA,QAAM,CAACqB,UAAD,IAAerB,QAAQ,CAAC,IAAIO,WAAJ,CAAgBS,KAAhB,CAAD,CAA7B;AAGA,QAAMM,eAAe,GAAGrB,WAAW,CAAC,CAACsB,CAAD,EAAYC,CAAZ,KAA0B,MAAM;AAChEH,IAAAA,UAAU,CAACI,sBAAX,CAAkCF,CAAlC,EAAqCC,CAArC;AACAH,IAAAA,UAAU,CAACK,SAAX,GAAuBV,KAAK,CAACW,KAAN,EAAvB;AACAN,IAAAA,UAAU,CAACO,cAAX,GAHgE,CAIlE;AACA;AACD,GANkC,EAMhC,CAACP,UAAD,CANgC,CAAnC;AAQA,QAAMQ,WAAW,GAAG5B,WAAW,CAAC,CAACsB,CAAD,EAAYC,CAAZ,KAA0B,MAAM;AAC5DR,IAAAA,KAAK,CAACc,QAAN,CAAeT,UAAU,CAACK,SAAX,CAAqBC,KAArB,GAA6BI,QAA7B,EAAf;AAEAV,IAAAA,UAAU,CAACW,WAAX,CAAuBC,GAAvB,IAA8B,CAA9B;;AACA,QAAGZ,UAAU,CAACW,WAAX,CAAuBC,GAAvB,IAA8BvB,sBAAsB,CAACW,UAAU,CAACW,WAAX,CAAuBE,IAAxB,CAAvD,EAAqF;AACjFb,MAAAA,UAAU,CAACW,WAAX,CAAuBE,IAAvB,IAA+B,CAA/B;AACAb,MAAAA,UAAU,CAACW,WAAX,CAAuBC,GAAvB,GAA6B,CAA7B;AACH;AAEJ,GAT8B,EAS5B,CAACjB,KAAD,CAT4B,CAA/B;AAWAd,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiC,QAAQ,GAAIC,CAAD,IAAa;AAC1B,UAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAqB;AACnBhB,QAAAA,UAAU,CAACiB,eAAX;AACD;AACJ,KAJD,CADY,CAMZ;;;AACAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,EAAsCL,QAAtC;AACA,WAAO,MAAM;AACTI,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,UAA7B,EAAyCN,QAAzC;AACH,KAFD;AAGH,GAXQ,EAWN,CAACd,UAAU,CAACW,WAAZ,CAXM,CAAT,CA1B2D,CAuC3D;AACA;AACA;;AAGA,sBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,UAAU,CAACK,SAAX,CAAqBK,QAArB,GAAgCW,GAAhC,CAAoC,CAACC,GAAD,EAAMpB,CAAN,kBACjC,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKoB,GAAG,CAACD,GAAJ,CAAQ,CAACR,IAAD,EAAOV,CAAP,kBACL,oBAAC,IAAD;AACE,IAAA,IAAI,EAAEU,IADR;AAEE,IAAA,GAAG,EAAG,GAAEX,CAAE,IAAGC,CAAE,EAFjB;AAGE,IAAA,WAAW,EAAEF,eAAe,CAACC,CAAD,EAAIC,CAAJ,CAH9B;AAIE,IAAA,OAAO,EAAEK,WAAW,CAACN,CAAD,EAAIC,CAAJ,CAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADH,CADL,CADJ;AAgBH,CA5DM","sourcesContent":["import React, { FC, useState, useCallback, useEffect } from 'react'\n\nimport styled from 'styled-components'\n\nimport { Field } from '../components/Field'\nimport { Cell } from '../components/Cell'\nimport { EField, ECellType } from '../entities/field'\nimport { cloneDeepWith, cloneDeep, isUndefined } from \"lodash\"\nimport { EShip, TPosition, EInitScreen } from '../entities/initScreen'\n\nconst Row = styled.div`\ndisplay: flex;\n`\n\n\nexport interface IInitScreenProps {\n    field: EField\n}\n\n\ntype IShipsState = Record<EShip, {\n    count: number\n    placedShips: TPosition[]\n}>\n\n\nconst MAX_COUNT_BY_SHIP_TYPE = {\n  [EShip.four]: 1,\n  [EShip.three]: 2,\n  [EShip.two]: 3,\n  [EShip.one]: 4,\n}\n\nexport const InitScreen: FC<IInitScreenProps> = ({ field }) => {\n    console.log(\"rerender\")\n\n    const [prevPostion, setPrevPosition] = useState<TPosition>()\n    const [initScreen] = useState(new EInitScreen(field))\n\n\n    const handleMouseOver = useCallback((i: number, j: number) => () => {\n        initScreen.setCurrentShipPosition(i, j)\n        initScreen.tempField = field.clone();\n        initScreen.addCurrentShip()\n      // TODO\n      // change field with onFieldChange\n    }, [initScreen])\n\n    const handleClick = useCallback((i: number, j: number) => () => {\n        field.setCells(initScreen.tempField.clone().getCells())\n\n        initScreen.currentShip.num += 1;\n        if(initScreen.currentShip.num >= MAX_COUNT_BY_SHIP_TYPE[initScreen.currentShip.type]){\n            initScreen.currentShip.type -= 1;\n            initScreen.currentShip.num = 0;\n        }\n        \n    }, [field])\n\n    useEffect(() => {\n        const listener = (e : any) => {\n            if (e.keyCode === 32){\n              initScreen.inverseRotation()\n            }\n        }\n        //document.removeEventListener('keypress', listener)\n        document.addEventListener('keypress', listener)\n        return () => {\n            document.removeEventListener('keypress', listener)\n        };\n    }, [initScreen.currentShip])\n\n    // TODO\n    // space pressed\n    // click\n\n\n    return (\n        <Field>\n            {initScreen.tempField.getCells().map((row, i) => (\n                <Row key={i}>\n                    {row.map((type, j) => (\n                        <Cell\n                          type={type}\n                          key={`${i}-${j}`}\n                          onMouseOver={handleMouseOver(i, j)}\n                          onClick={handleClick(i, j)}\n                          />\n                     ))}\n                </Row>\n            ))}\n        </Field>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}